#include <bits/stdc++.h>
using namespace std;

vector<int> computeZ(const string &s) {
    int n = s.size();
    vector<int> z(n);
    int l = 0, r = 0;

    for (int i = 1; i < n; i++) {
        if (i <= r) 
            z[i] = min(r - i + 1, z[i - l]);
        
        while (i + z[i] < n && s[z[i]] == s[i + z[i]]) 
            z[i]++;
        
        if (i + z[i] - 1 > r) 
            l = i, r = i + z[i] - 1;
    }
    return z;
}

void solve() {
    string text, pattern;
    cin >> text >> pattern;

    string combined = pattern + "$" + text;
    vector<int> z = computeZ(combined);
    int m = pattern.size();

    for (int i = m + 1; i < z.size(); i++) {
        if (z[i] == m)
            cout << "Pattern found at index " << i - m - 1 << '\n';
    }
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    solve();
}
