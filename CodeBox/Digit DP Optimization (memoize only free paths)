// In the name of Alah, the most merciful, the most gracious
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define mh ios::sync_with_stdio(false); cin.tie(0);
#define nl '\n'

const ll N = 1e18;

ll dp[20][1025][2], n = 19;
string num;

ll DigitDP(int pos, int mask, int isSmall) {

	if (pos == n) return (__builtin_popcount(mask) == (31 - __builtin_clz(mask)) && mask);

	ll &an = dp[pos][mask][isSmall];
	if (~an and isSmall) return an;  // memoize only free paths
	an = 0;
	int hi = isSmall ? 9 : (num[pos] - '0');
	for (int dig = 0; dig <= hi; ++dig) {
		int newSmall = isSmall | (dig < hi);
		int nxtMask = mask;
		if (dig > 0) nxtMask |= (1 << dig);
		else if (mask > 0) nxtMask |= 1;
		an += DigitDP(pos + 1, nxtMask, newSmall);
	}
	return an;
}

int main()
{
	mh
	int t;
	cin >> t;

	memset(dp, -1, sizeof(dp));

	for (int cs = 1; cs <= t; ++cs) {
		ll x;
		cin >> x;
		num = to_string(x);
		num = string(n - num.size(), '0') + num;
		ll ans = DigitDP(0, 0, 0);
		cout << ans << nl;
	}

	return 0;
}

//https://toph.co/p/noora-number
